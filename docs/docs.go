// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/channel": {
            "get": {
                "description": "Get one channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Channel"
                ],
                "summary": "Get one channel",
                "operationId": "get-channel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the channel",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.ChannelWithPodchannels"
                        }
                    }
                }
            }
        },
        "/channel/create": {
            "post": {
                "description": "Create Channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Channel"
                ],
                "summary": "Create Channel",
                "operationId": "create-channel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of Channel",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Channel"
                        }
                    }
                }
            }
        },
        "/channels": {
            "get": {
                "description": "Get channels",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Channel"
                ],
                "summary": "Get channels",
                "operationId": "get-channels",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Channel"
                            }
                        }
                    }
                }
            }
        },
        "/podchannel/create": {
            "post": {
                "description": "Create one podchannel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PodChannel"
                ],
                "summary": "Create one podchannel",
                "operationId": "create-podchannel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the podchannel",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "type of the podchannel",
                        "name": "types",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "channel of the podchannel",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.ChannelWithPodchannels"
                        }
                    }
                }
            }
        },
        "/podchannel/message": {
            "get": {
                "description": "mess podchannel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PodChannel"
                ],
                "summary": "Get Messages PodChannel",
                "operationId": "get-podchannel-message",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "podchannel id",
                        "name": "podchannel_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Message"
                            }
                        }
                    }
                }
            }
        },
        "/podchannels": {
            "get": {
                "description": "Get podchannel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PodChannel"
                ],
                "summary": "Get podchannel",
                "operationId": "get-podchannel",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the podchannel",
                        "name": "channelId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Podchannel"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.ChannelWithPodchannels": {
            "type": "object",
            "properties": {
                "channel": {
                    "$ref": "#/definitions/models.Channel"
                },
                "podchannels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Podchannel"
                    }
                }
            }
        },
        "models.Channel": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "created_at",
                    "type": "string"
                },
                "id": {
                    "description": "id",
                    "type": "integer"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string"
                }
            }
        },
        "models.Message": {
            "type": "object",
            "properties": {
                "author_id": {
                    "description": "author_id",
                    "type": "string"
                },
                "content": {
                    "description": "content",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string"
                },
                "id": {
                    "description": "id",
                    "type": "integer"
                },
                "podchannel_id": {
                    "description": "podchannel_id",
                    "type": "integer"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string"
                }
            }
        },
        "models.Podchannel": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "description": "channel_id",
                    "type": "integer"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string"
                },
                "id": {
                    "description": "id",
                    "type": "integer"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "types": {
                    "description": "types",
                    "type": "string"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "LilDiscord Api",
	Description:      "websocket chats",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
